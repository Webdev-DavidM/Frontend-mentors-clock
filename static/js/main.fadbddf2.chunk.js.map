{"version":3,"sources":["App.js","index.js"],"names":["App","useRef","useState","time","setTime","quote","setQuote","quoteLoading","setQuoteLoading","geoLocation","setGeoLocation","expanded","setExpanded","yearData","setYearData","useEffect","a","axios","timeData","console","log","formattedTime","data","datetime","split","substr","randomQuote","error","refreshQuote","setTimeout","className","queries","small","medium","large","matches","src","process","alt","content","onClick","author","city","toUpperCase","country_name","prevBool","timezone","day_of_year","day_of_week","week_number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fadbddf2.chunk.js","sourcesContent":["import './App.scss';\nimport Media from 'react-media';\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const data = useRef();\n  const [time, setTime] = useState();\n  const [quote, setQuote] = useState();\n  const [quoteLoading, setQuoteLoading] = useState(false);\n  const [geoLocation, setGeoLocation] = useState();\n  const [expanded, setExpanded] = useState(false);\n  const [yearData, setYearData] = useState();\n  const [isNight, setIsNight] = useState();\n\n  useEffect(() => {\n    try {\n      (async function timeAPI() {\n        let timeData = await axios('https://worldtimeapi.org/api/ip');\n        console.log(timeData);\n        let formattedTime = timeData.data.datetime.split('T')[1].substr(0, 5);\n        setTime(formattedTime);\n        setYearData(timeData.data);\n      })();\n\n      (async function geoLocationAPI() {\n        let geoLocation = await axios('https://freegeoip.app/json/');\n        console.log(geoLocation.data);\n        setGeoLocation(geoLocation.data);\n      })();\n\n      (async function quoteAPI() {\n        let randomQuote = await axios('https://api.quotable.io/random');\n        setQuote(randomQuote.data);\n      })();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const move = () => {\n    setExpanded((prevBool) => !prevBool);\n  };\n\n  const refreshQuote = async () => {\n    setQuoteLoading(true);\n    (async function quoteAPI() {\n      let randomQuote = await axios('http://api.quotable.io/random');\n      setQuote(randomQuote.data);\n    })();\n    setTimeout(() => {\n      setQuoteLoading(false);\n    }, 1000);\n  };\n\n  setTimeout(async () => {\n    (async function timeAPI() {\n      let timeData = await axios('http://worldtimeapi.org/api/ip');\n      console.log(timeData);\n      let formattedTime = timeData.data.datetime.split('T')[1].substr(0, 5);\n      setTime(formattedTime);\n    })();\n  }, 1000);\n\n  return (\n    <>\n      <div className='image-container'>\n        <div className='opacity-layer'> </div>\n        <Media\n          queries={{\n            small: '(max-width: 768px)',\n            medium: '(min-width: 769px) and (max-width: 1440px)',\n            large: '(min-width: 1440px)',\n          }}>\n          {(matches) => (\n            <>\n              {matches.small &&\n                (time ? (\n                  time.split(':')[0] > 5 && time.split(':')[0] < 18 ? (\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/mobile-daytime-375x667.jpg`}\n                      alt=''\n                    />\n                  ) : (\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/mobile-nighttime-375x667.jpg`}\n                      alt=''\n                    />\n                  )\n                ) : (\n                  <img\n                    src={`${process.env.PUBLIC_URL}/images/mobile-daytime-375x667.jpg`}\n                    alt=''\n                  />\n                ))}\n              {matches.medium &&\n                (time ? (\n                  time.split(':')[0] > 5 && time.split(':')[0] < 18 ? (\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/tablet-daytime-768x1024.jpg`}\n                      alt=''\n                    />\n                  ) : (\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/tablet-nighttime-768-1024.jpg`}\n                      alt=''\n                    />\n                  )\n                ) : (\n                  <img\n                    src={`${process.env.PUBLIC_URL}/images/tablet-daytime-768x1024.jpg`}\n                    alt=''\n                  />\n                ))}\n              {matches.large &&\n                (time ? (\n                  time.split(':')[0] > 5 && time.split(':')[0] < 18 ? (\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/desktop-daytime-1440-800.jpg`}\n                      alt=''\n                    />\n                  ) : (\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/desktop-nighttime-1440-800.jpg`}\n                      alt=''\n                    />\n                  )\n                ) : (\n                  <img\n                    src={`${process.env.PUBLIC_URL}/images/desktop-daytime-1440-800.jpg`}\n                    alt=''\n                  />\n                ))}\n            </>\n          )}\n        </Media>\n        {/* The data container is absolute so it can move up and down, I have created another full size container within\n        so I can use flex and display the quote at the top and time at the bottom */}\n        <div\n          className={`${\n            !expanded ? 'data-container' : 'data-container move-data-container'\n          }`}>\n          <div className='info-flex-container'>\n            <section className='quote'>\n              <p> {quote && quote.content}</p>\n              <button\n                className={`${\n                  quoteLoading\n                    ? 'refresh-svg-container refresh-rotate'\n                    : 'refresh-svg-container'\n                } `}\n                onClick={() => refreshQuote()}>\n                <img\n                  src={`${process.env.PUBLIC_URL}/images/icons/icon-refresh.svg`}\n                  alt=''\n                />\n              </button>\n              <p className='author'>{quote && quote.author}</p>\n            </section>\n\n            <section className='time'>\n              <div className='intro'>\n                {time && time.split(':')[0] > 5 && time.split(':')[0] < 18 ? (\n                  <img\n                    src={`${process.env.PUBLIC_URL}/images/icons/icon-sun.svg`}\n                    alt=''\n                  />\n                ) : (\n                  <img\n                    src={`${process.env.PUBLIC_URL}/images/icons/icon-moon.svg`}\n                    alt=''\n                  />\n                )}\n\n                <span className='time-of-day'>\n                  &nbsp;\n                  {time && time.split(':')[0] > 5 && time.split(':')[0] < 12 ? (\n                    <span>GOOD MORNING</span>\n                  ) : time &&\n                    time.split(':')[0] > 12 &&\n                    time.split(':')[0] < 18 ? (\n                    <span>GOOD AFTERNOON</span>\n                  ) : (\n                    <span>GOOD EVENING</span>\n                  )}\n                  , IT'S CURRENTLY\n                </span>\n              </div>\n\n              <div className='main-time'>\n                <h1>{time && time}</h1> <span className='time-zone'>BST</span>\n              </div>\n              <div className='place'>\n                {' '}\n                <span>\n                  {' '}\n                  IN {geoLocation && geoLocation.city.toUpperCase()},{' '}\n                  {geoLocation && geoLocation.country_name.toUpperCase()}\n                </span>\n                <button className='expand-btn' onClick={() => move()}>\n                  {!expanded ? <span>MORE</span> : <span>LESS</span>}\n                  <div\n                    className={`${\n                      !expanded\n                        ? 'arrow-image-container'\n                        : 'arrow-image-container arrow-move'\n                    }`}>\n                    {' '}\n                    <img\n                      src={`${process.env.PUBLIC_URL}/images/icons/icon-arrow-up.svg`}\n                      alt=''\n                    />{' '}\n                  </div>\n                </button>\n              </div>\n            </section>\n          </div>\n          <section\n            className={`${\n              time\n                ? time.split(':')[0] > 5 && time.split(':')[0] < 18\n                  ? 'timezone-expand-info'\n                  : 'timezone-expand-info-dark'\n                : 'timezone-expand-info'\n            }`}>\n            <div className='timezone'>\n              <span>CURRENT TIMEZONE</span>\n              <span>{yearData && yearData.timezone}</span>\n            </div>\n            <div className='day-of-the-year'>\n              <span>DAY OF THE YEAR</span>\n              <span>{yearData && yearData.day_of_year}</span>\n            </div>\n            <div className='day-of-the-week'>\n              <span>DAY OF THE WEEK</span>\n              <span>{yearData && yearData.day_of_week}</span>\n            </div>\n            <div className='week-number'>\n              <span>WEEK NUMBER</span>\n              <span>{yearData && yearData.week_number}</span>\n            </div>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}